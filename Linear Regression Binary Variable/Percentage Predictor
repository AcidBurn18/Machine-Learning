#**Ansh Agrawal**

#**Importing all the modules**


import pandas as pd
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
from sklearn.metrics import mean_absolute_error

"""**Importing the csv file**"""

df=pd.read_excel("Book1.xlsx")
plt.scatter(df['hours'],df['percentage'])
plt.xlabel("Hours")
plt.ylabel("Percentage")
df

#Spliting The Csv File

x=df.iloc[:,:-1].values
y=df.iloc[:,1].values
X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=.20,random_state=False)

#Training the model

regression = LinearRegression()
regression.fit(X_train, y_train)
print(regression.coef_,regression.intercept_)

#Predicting

pred_y = regression.predict(X_test)
prediction = pd.DataFrame({'Hours': [i[0] for i in X_test], 'Predicted Marks': [k for k in pred_y],'Actual Marks':[j for j in y_test]})
print(prediction)

print('Mean absolute error: ',mean_absolute_error(y_test,pred_y))

""" **Prediction at hours = 9.5**

"""

hours = [9.25]
answer = regression.predict([hours])
print("Predicted Score = {}".format(round(answer[0],2))) #rounding upto 2 decimal places

"""PLot the Graph """

plt.scatter(X_test,y_test)
plt.xlabel('Hours in test case')
plt.ylabel('Percentage')
plt.plot(X_test,pred_y)
